<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="arduinobot">

    <xacro:arg name="is_ignition" default="true"/>
    
    <!-- Useful XACRO Variables (Properties) -->
    <!-- Defining constants like PI, effort, and velocity to be used throughout the robot description -->
    <xacro:property name="PI" value="3.14159265359" />
    <xacro:property name="effort" value="30.0" />
    <xacro:property name="velocity" value="10.0" />

  <!-- Include Gazebo Parameters -->
  <xacro:include filename="$(find arduinobot_description)/urdf/arduinobot_gazebo.xacro" />

  <!-- Include ros2_control Plugins -->
  <xacro:include filename="$(find arduinobot_description)/urdf/arduinobot_ros2_control.xacro" />

    <!-- Useful Macros -->
    <!-- Macro to define the inertial properties of a link, such as mass and inertia -->
    <xacro:macro name="default_inertial" params="mass">
        <inertial>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <mass value="${mass}" />
            <inertia ixx="1.0" ixy="0.0" ixz="0.0"
                     iyy="1.0" iyz="0.0"
                     izz="1.0" />
        </inertial>
    </xacro:macro>

    <!-- Links -->
    <!-- The links represent physical parts of the robot, and each has a visual and collision representation -->
    <link name="world"/> <!-- World link, serves as the base frame of reference -->

    <link name="base_link">
        <!-- Adding inertial properties to the base link with mass set to 1.0 -->
        <xacro:default_inertial mass="1.0"/>
        <visual>
            <!-- Defining the visual appearance of the base link with an STL mesh -->
            <origin rpy="0 0 0" xyz="-0.5 -0.5 0"/>
            <geometry>
                <mesh filename="package://arduinobot_description/meshes/basement.STL" scale="0.01 0.01 0.01"/>
            </geometry>
        </visual>
        <collision>
            <!-- Defining the collision geometry of the base link -->
            <origin rpy="0 0 0" xyz="-0.5 -0.5 0"/>
            <geometry>
                <mesh filename="package://arduinobot_description/meshes/basement.STL" scale="0.01 0.01 0.01"/>
            </geometry>
        </collision>
    </link>

    <link name="base_plate">
        <!-- Base plate link, with inertial properties and visual/collision geometry -->
        <xacro:default_inertial mass="0.1"/>
        <visual>
            <origin rpy="0 0 0" xyz="-0.39 -0.39 -0.56"/>
            <geometry>
                <mesh filename="package://arduinobot_description/meshes/base_plate.STL" scale="0.01 0.01 0.01"/>
            </geometry>
        </visual>
        <collision>
            <origin rpy="0 0 0" xyz="-0.39 -0.39 -0.56"/>
            <geometry>
                <mesh filename="package://arduinobot_description/meshes/base_plate.STL" scale="0.01 0.01 0.01"/>
            </geometry>
        </collision>
    </link>

    <link name="forward_drive_arm">
        <!-- Forward drive arm link with inertial properties and mesh representation -->
        <xacro:default_inertial mass="0.1"/>
        <visual>
            <origin rpy=" 0 -${PI / 2} ${PI / 2}" xyz="0.19 0.06 -0.08"/>
            <geometry>
                <mesh filename="package://arduinobot_description/meshes/forward_drive_arm.STL" scale="0.01 0.01 0.01"/>
            </geometry>
        </visual>
        <collision>
            <origin rpy=" 0 -${PI / 2} ${PI / 2}" xyz="0.19 0.06 -0.08"/>
            <geometry>
                <mesh filename="package://arduinobot_description/meshes/forward_drive_arm.STL" scale="0.01 0.01 0.01"/>
            </geometry>
        </collision>
    </link>

    <link name="horizontal_arm">
        <!-- Horizontal arm link with inertial properties and mesh representation -->
        <xacro:default_inertial mass="0.1"/>
        <visual>
            <origin rpy="${PI / 2} 0 ${PI / 2}" xyz="-0.03 -0.4 -0.06"/>
            <geometry>
                <mesh filename="package://arduinobot_description/meshes/horizontal_arm.STL" scale="0.01 0.01 0.01"/>
            </geometry>
        </visual>
        <collision>
            <origin rpy="${PI / 2} 0 ${PI / 2}" xyz="-0.03 -0.4 -0.06"/>
            <geometry>
                <mesh filename="package://arduinobot_description/meshes/horizontal_arm.STL" scale="0.01 0.01 0.01"/>
            </geometry>
        </collision>
    </link>

    <link name="claw_support">
        <!-- Claw support link with inertial properties and mesh representation -->
        <xacro:default_inertial mass="0.05"/>
        <visual>
            <origin rpy="0 0 ${PI / 2}" xyz="0 -0.05 -0.15"/>
            <geometry>
                <mesh filename="package://arduinobot_description/meshes/claw_support.STL" scale="0.01 0.01 0.01"/>
            </geometry>
        </visual>
        <collision>
            <origin rpy="0 0 ${PI / 2}" xyz="0 -0.05 -0.15"/>
            <geometry>
                <mesh filename="package://arduinobot_description/meshes/claw_support.STL" scale="0.01 0.01 0.01"/>
            </geometry>
        </collision>
    </link>

    <link name="gripper_right">
        <!-- Right gripper link, with inertial properties and mesh representation -->
        <xacro:default_inertial mass="0.01"/>
        <visual>
            <origin rpy="0 0 -${PI / 2}" xyz="-0.1 0.50 -0.1"/>
            <geometry>
                <mesh filename="package://arduinobot_description/meshes/right_finger.STL" scale="0.01 0.01 0.01"/>
            </geometry>
        </visual>
        <collision>
            <origin rpy="0 0 -${PI / 2}" xyz="-0.1 0.50 -0.1"/>
            <geometry>
                <mesh filename="package://arduinobot_description/meshes/right_finger.STL" scale="0.01 0.01 0.01"/>
            </geometry>
        </collision>
    </link>

    <link name="gripper_left">
        <!-- Left gripper link, with inertial properties and mesh representation -->
        <xacro:default_inertial mass="0.01"/>
        <visual>
            <origin rpy="0 0 -${PI / 2}" xyz="-0.04 0.50 -0.1"/>
            <geometry>
                <mesh filename="package://arduinobot_description/meshes/left_finger.STL" scale="0.01 0.01 0.01"/>
            </geometry>
        </visual>
        <collision>
            <origin rpy="0 0 -${PI / 2}" xyz="-0.04 0.50 -0.1"/>
            <geometry>
                <mesh filename="package://arduinobot_description/meshes/left_finger.STL" scale="0.01 0.01 0.01"/>
            </geometry>
        </collision>
    </link>

    <link name="rgb_camera">
        <xacro:default_inertial mass="0.01"/>
        <visual>
            <origin rpy="-1.57 0 -1.57" xyz="-0.1 0.125 0.15"/>            <geometry>
                <mesh filename="package://arduinobot_description/meshes/pi_camera.STL" scale="0.01 0.01 0.01"/>
            </geometry>
        </visual>
        <!-- <collision>
            <origin rpy="-1.57 0 -1.57" xyz="-0.1 0.125 0.15"/>
            <geometry>
                <mesh filename="package://arduinobot_description/meshes/pi_camera.STL" scale="0.01 0.01 0.01"/>
            </geometry> 
      </collision> -->
    </link>

    
    <!-- Joints -->  
    <!-- Joints define the connections and motion capabilities between robot links -->
    
    <!-- Virtual joint to fix the base link to the world -->
    <joint name="virtual_joint" type="fixed">
        <parent link="world"/>
        <child link="base_link"/>
        <origin xyz="0 0 0" rpy="0 0 0"/>
    </joint> 

    <!-- Revolute joints allow rotational motion between links -->
    <joint name ="joint_1" type="revolute">
        <parent link="base_link"/>
        <child link = "base_plate"/>
        <origin xyz="0 0 0.307"/>
        <axis xyz="0 0 1"/>
        <limit lower="-${PI / 2}" upper="${PI / 2}" 
               effort="${effort}" velocity="${velocity}"/>
    </joint>

    <joint name ="joint_2" type="revolute">
        <parent link="base_plate"/>
        <child link = "forward_drive_arm"/>
        <origin xyz="-0.02 0 0.35"/>
        <axis xyz="1 0 0"/>
        <limit lower="-${PI / 2}" upper="${PI / 2}"
                effort="${effort}" velocity="${velocity}"/>
    </joint>

    <joint name ="joint_3" type="revolute">
        <parent link="forward_drive_arm"/>
        <child link = "horizontal_arm"/>
        <origin xyz="0 0 0.8"/>
        <axis xyz="1 0 0"/>
        <limit lower="-${PI / 2}" upper="${PI / 2}"
               effort="${effort}" velocity="${velocity}"/>
    </joint>

    <!-- Fixed joint to connect the horizontal arm to the claw support -->
    <joint name ="horizontal_arm_to_claw_support" type="fixed">
        <parent link="horizontal_arm"/>
        <child link = "claw_support"/>
        <origin xyz="0 0.82 0"/>
    </joint>

    <!-- Revolute joints to control the gripper (right and left) -->
    <joint name ="joint_4" type="revolute">
        <parent link="claw_support"/>
        <child link = "gripper_right"/>
        <origin xyz="-0.04 0.13 -0.1"/>
        <axis xyz="0 0 1"/>
        <limit lower="-${PI / 2}" upper="0.0" 
               effort="${effort}" velocity="${velocity}"/>
    </joint>

    <joint name ="joint_5" type="revolute">
        <parent link="claw_support"/>
        <child link = "gripper_left"/>
        <origin xyz="-0.22 0.13 -0.1"/>
        <axis xyz="0 0 1"/>
        <limit lower="0.0" upper="${PI / 2}" 
               effort="${effort}" velocity="${velocity}"/>
        <mimic joint="joint_4" multiplier="-1"/>
    </joint>
    
    <joint name ="rgb_camera_joint" type="fixed">
        <parent link="base_link"/>
        <child link = "rgb_camera"/>
        <origin rpy="0 -0.5 ${PI / 2}" xyz=" 0 0.45 0.2"/>
    </joint>
</robot>
